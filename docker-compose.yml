version: "3.9"

services:
  postgres:
    image: postgres:16-alpine
    container_name: pg
    env_file: .env
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    restart: unless-stopped

  n8n:
    image: n8nio/n8n:latest          # ver tags em Docker Hub :contentReference[oaicite:0]{index=0}
    container_name: n8n
    env_file: .env
    ports:
      - "${N8N_PORT}:5678"
    depends_on:
      - postgres
    volumes:
      - n8n_data:/home/node/.n8n
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.n8n.rule=Host(`n8n.exemplo.com`)"
      - "traefik.http.routers.n8n.entrypoints=websecure"
      - "traefik.http.routers.n8n.tls=true"
      - "traefik.http.routers.n8n.tls.certresolver=letsencrypt"
      - "traefik.http.services.n8n.loadbalancer.server.port=5678"

  prometheus:
    image: prom/prometheus:latest    # tags :contentReference[oaicite:1]{index=1}
    container_name: prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - promdata:/prometheus
    ports:
      - "9090:9090"
    restart: unless-stopped

  grafana:
    image: grafana/grafana-oss:10.4.1 # tags :contentReference[oaicite:2]{index=2}
    container_name: grafana
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - TZ=${TZ}
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    restart: unless-stopped
  traefik:
    image: traefik:v3.4.1          # estável (pushed há 4 dias) :contentReference[oaicite:1]{index=1}
    command:
      - "--providers.file.directory=/dynamic"
      - "--providers.file.watch=true"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "./traefik/traefik.yml:/traefik.yml:ro"
      - "./traefik/dynamic:/dynamic:ro"
      - "letsencrypt:/letsencrypt"
    restart: unless-stoppedi
  pg_backup:
    image: alpine:3.20
    volumes:
      - ./scripts:/scripts:ro
      - pgdata:/var/lib/postgresql/data:ro
      - ./backups:/backups
    env_file: .env
    entrypoint: ["/bin/sh", "-c", "crond -f -l 2"]
    restart: unless-stopped


volumes:
  pgdata:
  n8n_data:
  promdata:
  grafana_data:
